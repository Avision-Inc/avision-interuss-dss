swagger: '2.0'
info:
  description: |
    This repository contains a simple, open, and API used for separate UAS Service Suppliers (USS) to communicate during UAS operations, known as the InterUSS Platformâ„¢. This flexible and distributed system is used to connect multiple USSs operating in the same general area to share safety information while protecting operator and consumer privacy. The system is focused on facilitating communication amongst actively operating USSs with no details about UAS operations stored or processed on the InterUSS Platform.

    ### Main Features

    * Simple, open, flexible, and scalable information interface and Optimistic Concurrency Control to simplify USS to USS communication and control race conditions. 
    * Effective information sharing to enable effective, deterministic conflict detection for flight planning across multiple overlapping 4D volumes from multiple USSs. 
    * Effective reconstitution of flight volumes when restarting a USS or adding a USS to an existing environment.

    ### Main Assumptions

    * Trust each USS to deconflict with known flight data.
    * Auditing is available, as all USSs can verify the authorship and addition of erroneous conflictions.
    * Deconfliction is simply defined as no overlapping flights in time and volume.
    
    For more information, see the InterUSS Platform technical document located here: https://docs.google.com/document/d/1JtSvSnvskrctbCF8qsU7ZIMTzYegZtGDj4-a8kdC_Cs/
    
    or the GitHub repository located here:
    https://github.com/wing-aviation/InterUSS-Platform

    # Try it out

    The below API are connected to a sandbox environment to allow you to try the different API. For endpoints with an access_token, use a NASA FIMS valid OAuth token or use 'sandbox' (which works only in the sandbox environment).
    
  version: 1.0.0
  title: InterUSS Platform - Data Node Stateless API
  contact:
    email: hikevin+interuss@google.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

paths:
  /status:
    get:
      summary: Just a quick status checker on the API layer
      produces:
      - application/json
      responses:
        200:
          description: Success, JSend version of OK
          schema:
            $ref: '#/definitions/JSendResponse'
  /slippy/{zoom}:
    get:
      summary: Figures out which slippy tiles are impacted by a CSV list of longitudes and latitudes
      produces:
      - application/json
      parameters:
      - name: zoom
        in: path
        description: Zoom level to use for tiles
        required: true
        type: integer
      - name: coords
        in: query
        description: CSV list of longitude,latitude,longitude,latitude...
        required: true
        type: string
      responses:
        200:
          description: Success, JSend version of tiles and links to tiles
          schema:
            $ref: '#/definitions/SlippyResponse'
        400:
          description: Invalid zoom or csv
  /introspect:
    get:
      summary: Status checker of an authorization token
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Access token to validate
        required: true
        type: string
      responses:
        200:
          description: JSend version of validated access token
          schema:
            $ref: '#/definitions/JSendResponse'
        400:
          description: Invalid/expired token or invalid format
        403:
          description: Access token not provided
  /GridCellMetaData/{zoom}/{x}/{y}:
    get:
      summary: Provides an instantaneous snapshot of the metadata for a specific GridCell
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        type: string
        default: sandbox
        required: true
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: x
        in: path
        description: x tile number in slippy tile format
        required: true
        type: integer
      - name: y
        in: path
        description: y tile number in slippy tile format
        required: true
        type: integer
      responses:
        200:
          description: JSend version of grid metadata, including the sync_token used for updating grids
          schema:
            $ref: '#/definitions/GridCellMetaDataResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided
    put:
      summary: Updates the metadata stored in a specific GridCell
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        required: true
        default: sandbox
        type: string
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: x
        in: path
        description: x tile number in slippy tile format
        required: true
        type: integer
      - name: y
        in: path
        description: y tile number in slippy tile format
        required: true
        type: integer
      - name: sync_token
        in: formData
        description: The synchronization token retrieved in the original GET GridCellMetadata
        required: true
        type: string
      - name: scope
        in: formData
        description: The submitting USS scope for the web service endpoint (used for OAuth access)
        required: true
        type: string
      - name: operation_endpoint
        in: formData
        description: The submitting USS web service endpoint where all flights in this cell can be retrieved from
        required: true
        type: string
      - name: operation_format
        in: formData
        description: The output format for the USS web service endpoint (i.e. NASA, GUTMA)
        required: true
        type: string
      - name: minimum_operation_timestamp
        in: formData
        description: the lower time bound of all of the USS's flights in this GridCell
        required: true
        type: string
        format: datetime
      - name: maximum_operation_timestamp
        in: formData
        description: The upper time bound of all of the USS's flights in this GridCell
        required: true
        type: string
        format: datetime
      responses:
        200:
          description: JSend version of updated grid metadata
          schema:
            $ref: '#/definitions/GridCellMetaDataResponse'
        400:
          description: Invalid request
        403:
          description: Valid OAuth access token
        408:
          description: Unable to lock GridCell
        409:
          description: Sync token does not match (GridCell updated since GET)
        424:
          description: JSON is not in the correct format
    delete:
      summary: Removes the USS entry in the metadata stored in a specific GridCell
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        required: true
        default: sandbox
        type: string
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: x
        in: path
        description: x tile number in slippy tile format
        required: true
        type: integer
      - name: y
        in: path
        description: y tile number in slippy tile format
        required: true
        type: integer
      responses:
        200:
          description: Success, Jend version of updated grid metadata
          schema:
            $ref: '#/definitions/GridCellMetaDataResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided
        408:
          description: Unable to lock GridCell

definitions:
  JSendResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        type: string
        format: json
  SlippyResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        type: object
        format: json
        properties:
          zoom:
            type: integer
          links:
            type: array
            items:
              type: string
          tiles:
            type: array
            items:
              type: array
              items:
                type: integer
                enum:
                  ["zoom, x, y"]

  GridCellMetaDataResponse:
    type: object
    properties:
      status:
        type: string
      sync_token:
        type: integer
      data:
        type: object
        format: json
        properties:
          version:
            type: integer
          timestamp:
            type: string
            format: datetime
          operators:
            type: array
            items:
              properties:
                uss:
                  type: string
                scope:
                  type: string
                version:
                  type: integer
                timestamp:
                  type: string
                  format: datetime
                operation_endpoint:
                  type: string
                operation_format:
                  type: string
                minimum_operation_timestamp: 
                  type: string
                  format: datetime
                maximum_operation_timestamp: 
                  type: string
                  format: datetime

# Added by API Auto Mocking Plugin
host: 35.192.112.1:8121
basePath: /
schemes:
 - http
